---
title: "Metadata summaries"
author: "Abby Lewis"
format: html
editor: visual
---

Calculate basic summary stats and create maps

Load packages and data

```{r}
#Load packages
library(tidyverse)
library(ggthemes)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
#remotes::install_github("ropensci/rnaturalearthhires")
library(rnaturalearthhires)
library(ggspatial)
library(lwgeom)

#Load data
metadata <- read_tsv("../Data/metadata.csv")
data <- read_tsv("../Data/profiles_raw.csv")

metadata %>%
  group_by(LakeID, LakeName) %>%
  summarize(Max_depth = max(MaximumDepth_m, na.rm = T),
            Min_depth = min(MaximumDepth_m, na.rm = T)) %>%
  filter(!Max_depth== Min_depth)

metadata %>%
  filter(is.na(TrophicStatus)) %>%
  arrange(Source)

length(unique(metadata$LakeID))
length(unique(data$LakeID))

unique(data$LakeID[!data$LakeID %in% metadata$LakeID])
unique(metadata$LakeID[!metadata$LakeID %in% data$LakeID])
length(unique(metadata$ContactName))
length(unique(metadata$PaperName))
length(unique(metadata$Country))
length(unique(data$LakeID))
```

Map study sites

<https://wilkelab.org/practicalgg/articles/Winkel_tripel.html>

```{r}
#Load basemap
world <- ne_countries(scale = "medium", returnclass = "sf")
crs_wintri <- "+proj=wintri +datum=WGS84 +no_defs +over"
world_wintri <- st_transform_proj(world, crs = crs_wintri)

disp_win_wgs84 <- st_sfc(st_point(c(-180, -80)), st_point(c(180, 80)),
                         crs = 4326)
disp_win_trans <- st_transform(disp_win_wgs84, crs = crs_wintri)
disp_win_coord <- st_coordinates(disp_win_trans)

grat_wintri <- 
  st_graticule(x = c(-180, -90, 180, 90),
               crs = st_crs(4326),
               lat = c(-89.9, seq(-90, 90, 20), 89.9),
               ) %>%
  st_transform_proj(crs = crs_wintri)
meta_wintri <- st_transform_proj(st_as_sf(metadata, coords = c("Longitude", "Latitude")), 
                                 crs = crs_wintri)
meta_wintri <- data %>%
  group_by(LakeID) %>%
  summarize(CH4 = ifelse(sum(!is.na(CH4_umolL))>0, 1, 0),
            CO2 = ifelse(sum(!is.na(CO2_umolL))>0, 1, 0)) %>%
  mutate(Data_avail = ifelse(CH4 + CO2 == 2,
                             "Both",
                             ifelse(CH4 == 1, "CH[4]",
                                    ifelse(CO2 == 1, "CO[2]", NA)))) %>%
  left_join(metadata) %>%
  filter(!is.na(Latitude)) %>%
  st_as_sf(coords = c("Longitude", "Latitude")) %>%
  st_transform_proj(crs = crs_wintri) 

# vectors of latitudes and longitudes that go once around the 
# globe in 1-degree steps
lat_min <- -90
lat_max <- 90
lon_min <- -180
lon_max <- 180
lats <- c(lat_max:lat_min, rep(lat_min, lon_max-lon_min+1), 
          lat_min:lat_max, rep(lat_max, lon_max-lon_min+1))
longs <- c(rep(lon_max, lat_max-lat_min+1), lon_max:lon_min, 
           rep(lon_min, lat_max-lat_min+1), lon_min:lon_max)

# turn into correctly projected sf collection
wintri_outline <- 
  list(cbind(longs, lats)) %>%
  st_polygon() %>%
  st_sfc( # create sf geometry list column
    crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  ) %>% 
  st_sf() %>%
  st_transform_proj(crs = crs_wintri) # transform to Winkel tripel

ns <- meta_wintri %>%
  group_by(Data_avail) %>%
  summarize(n = length(unique(LakeID)))

both <- ns$n[ns$Data_avail == "Both"]
ch4 <- ns$n[ns$Data_avail == "CH[4]"]
co2 <- ns$n[ns$Data_avail == "CO[2]"]

#Plot!
map <- ggplot(data = world_wintri) +
  geom_sf(data = wintri_outline,
    fill = "grey93", size = 0.5/.pt) + 
  geom_sf(data = grat_wintri, color = "black", size = 0.05, alpha = 0.1) + 
  geom_sf(fill = "white", color = "grey70", size = 0.5/.pt) +
  #geom_sf(data = meta_wintri,
  #        fill = "black",shape = 21, color = "white", 
  #        size = 2, alpha  =.5, stroke = .4)+
  geom_sf(data = meta_wintri %>% filter(Data_avail == "CO[2]"),
          aes(fill = Data_avail),shape = 21, color = "white", 
          size = 2, alpha  =.5, stroke = .4)+
  geom_sf(data = meta_wintri %>% filter(Data_avail == "CH[4]"),
          aes(fill = Data_avail),shape = 21, color = "white", 
          size = 2, alpha  =.5, stroke = .4)+
  geom_sf(data = meta_wintri %>% filter(Data_avail == "Both"),
          aes(fill = Data_avail),shape = 21, color = "white", 
          size = 2, alpha  =.5, stroke = .4)+
  coord_sf(#xlim = disp_win_coord[,'X'], 
           ylim = disp_win_coord[,'Y'],
           datum = NULL, expand = FALSE)+
  scale_fill_manual(values = c("#000000","#922D50","#006989"),
                    name = "Data availability",
                    labels = c(bquote(CH[4]~"and"~CO[2]~"("*italic(n)~"="~.(both)*")"), 
                               bquote(CH[4]~"only ("*italic(n)~"="~.(ch4)*")"),
                               bquote(CO[2]~"only  ("*italic(n)~"="~.(co2)*")")))+
  #coord_sf(datum = NULL, expand = F)+ 
  theme(plot.margin = ggplot2::margin(0, 0, 0, 0, "cm"),
        plot.background = element_rect(fill = "white"),
        legend.position = c(.1, .3),
        legend.background = element_rect(color = "black", 
                                         linewidth = 0.2, 
                                         fill = fill_alpha("white", 0.8)),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.grid = element_line(color = "grey80",linetype = "dotted", linewidth = 0.0001))
```

Stats

(Range of depth/surface area/stratification)

```{r}
length(unique(metadata$LakeID)) #544
summary(as.factor(tolower(metadata$TrophicStatus)))
summary(metadata$MaximumDepth_m)
summary(metadata$SurfaceArea_km2)
summary(as.factor(metadata$StratificationRegime))
```

Summary plot

Map with subplots for key summary stats

```{r}
depth <- metadata %>%
  ggplot(aes(x = MaximumDepth_m))+
  geom_density()+
  scale_x_log10(n.breaks = 5)+
  scale_x_log10(breaks = c(1, 10, 100, 1000), 
                labels = c("1", "10", "100","1,000"))+
  theme_bw()+
  xlab("Maximum depth (m)")+
  theme(axis.title.x = element_text(vjust = 1),
        axis.text.x = element_text(angle = 30, hjust = 1))

area <- metadata %>%
  ggplot(aes(x = SurfaceArea_km2))+
  geom_density()+
  #scale_x_log10(n.breaks = 3, breaks = c(0.001, 1, 1000), 
  #              labels = c("0.001", "1", "1000"))+
  scale_x_log10(n.breaks = 3, breaks = c(0.0001, 0.01, 1, 100, 100000), 
                labels = c("0.0001", "0.01", "1", "100","100,000"))+
  theme_bw()+
  xlab(expression("Surface area ("*km^2*")"))+
  theme(axis.title.x = element_text(vjust = 1),
        axis.text.x = element_text(angle = 30, hjust = 1))

years <- data %>%
  mutate(Year = year(Date)) %>%
  filter(!is.na(CO2_umolL)|!is.na(CH4_umolL)) %>%
  group_by(Year) %>%
  summarize(lakes = length(unique(LakeID))) %>% 
  ggplot(aes(x = Year, y = lakes))+
  geom_line()+
  ylab("Lakes (n)")+
  theme_bw()+
  scale_x_continuous(n.breaks = 2)

doys <- data %>%
  left_join(metadata %>%
              select(LakeID, Latitude)) %>%
  mutate(Date = as.Date(Date),
         Date = ifelse(Latitude < 0, Date + months(6), Date),
         Date = as.Date(Date)) %>%
  filter(!is.na(CO2_umolL)|!is.na(CH4_umolL)) %>%
  mutate(yday = lubridate::yday(Date)) %>%
  group_by(LakeID, yday) %>%
  summarize() %>%
  ggplot(aes(x = yday))+
  geom_density()+
  xlab("Sampling date")+
  theme_bw()+
  scale_x_continuous(breaks = c(82, 266),
                     labels = c("spring\nequinox",
                                "autumn\nequinox"),
                     limits = c(0,365))+
  theme(axis.title.x = element_text(vjust = 0.5))

jpeg("../Figures/Data summary.jpeg", width = 6, height = 4.5, units = "in", res = 300)
ggpubr::ggarrange(map, 
                  ggpubr::ggarrange(depth, area, doys, nrow = 1, ncol = 3, 
                                      labels = c("b1", "b2", "b3"), label.x = -0.03,
                                      font.label = list(size = 10), align = "h"), 
                  nrow=2, heights = c(2, 1), labels = c("a", "b"), label.y = c(1, 1.15))
dev.off()
```

```{r}
min <- min(c(data$CO2_umolL, data$CH4_umolL), na.rm = T)
max <- max(c(data$CO2_umolL, data$CH4_umolL), na.rm = T)
jpeg("../Figures/Density.jpg", res = 300, width = 5, height = 2, units = "in")
data %>%
  select(CO2_umolL, CH4_umolL) %>%
  pivot_longer(everything()) %>%
  mutate(name = case_match(name,
                           "CH4_umolL" ~ "CH[4]",
                           "CO2_umolL" ~ "CO[2]")) %>%
  ggplot(aes(x = value))+
  geom_density()+
  scale_x_continuous(trans = scales::pseudo_log_trans(min, max), 
                     breaks = c(0,1,10,100,1000,10000, 100000, 1000000),
                     labels = c("0","1","10", "100", "1,000", "10,000","100,000", "1,000,000")) +
  facet_wrap(~name, labeller = "label_parsed", scales = "free")+
  xlab("Concentration (ÂµM)")+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 30, hjust = 1))
dev.off()
```
